<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="Translate Toolkit" creationtoolversion="2.5.0" segtype="sentence" o-tmf="UTF-8" adminlang="en" srclang="en" datatype="PlainText"/>
  <body>
    <tu>
      <tuv xml:lang="en">
        <seg>Network analysis library</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ネットワーク分析ライブラリ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The network analysis library was created by exporting basic functions from the RoadGraph core plugin and now you can use it's methods in plugins or directly from the Python console.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ネットワーク解析ライブラリはRoadGraphコアプラグインから基本機能をエクスポートすることによって作成されました。今はそのメソッドをプラグインで、またはPythonのコンソールから直接使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>General information</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>一般情報</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Briefly, a typical use case can be described as:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>手短に言えば、一般的なユースケースは、次のように記述できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>create graph from geodata (usually polyline vector layer)</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>地理データから地理的なグラフ（たいていはポリラインベクターレイヤー）を作成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>run graph analysis</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>グラフ分析の実行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>use analysis results (for example, visualize them)</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>分析結果の利用（例えば、これらの可視化）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Building a graph</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>グラフを構築する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The first thing you need to do --- is to prepare input data, that is to convert a vector layer into a graph.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>最初にする必要がある事は---入力データを準備することです、つまりベクターレイヤーをグラフに変換することです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>All further actions will use this graph, not the layer.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これからのすべての操作は、レイヤーではなく、このグラフを使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>As a source we can use any polyline vector layer.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ソースとしてどんなポリラインベクターレイヤーも使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Nodes of the polylines become graph vertexes, and segments of the polylines are graph edges.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ポリラインの頂点は、グラフの頂点となり、ポリラインのセグメントは、グラフの辺です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If several nodes have the same coordinates then they are the same graph vertex.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>いくつかのノードが同じ座標を持っている場合、それらは同じグラフの頂点です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>So two lines that have a common node become connected to each other.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>だから共通のノードを持つ2つの線は接続しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Additionally, during graph creation it is possible to "fix" ("tie") to the input vector layer any number of additional points.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>さらに、グラフの作成時には、入力ベクターレイヤーに好きな数だけ追加の点を「固定する」（「結びつける」）ことが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For each additional point a match will be found --- the closest graph vertex or closest graph edge.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>追加の点それぞれについて、対応箇所---最も近いグラフの頂点または最も近いグラフの辺、が探し出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In the latter case the edge will be split and a new vertex added.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>後者の場合、辺は分割されて新しい頂点が追加されるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Vector layer attributes and length of an edge can be used as the properties of an edge.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ベクターレイヤー属性と辺の長さは、辺の性質として使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>It's time to dive into the process.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>では手順に行きましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Then some examples for creating a director</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>それからディレクターを作成するためのいくつかの例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>To construct a director  we should pass a vector layer, that will be used as the source for the graph structure and information about allowed movement on each road segment (one-way or bidirectional movement, direct or reverse direction). The call looks like this</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ディレクターを構築するために、ベクターレイヤーを渡さなければなりません。これはグラフ構造および各道路セグメント上で許される移動（一方向または双方向の動き、順または逆の方向）についての情報のソースとして使用されるでしょう。呼び出しは次のようになります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>And here is full list of what these parameters mean:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>そして、ここでこれらのパラメーターは何を意味するかの完全なリストは以下のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``directionFieldId`` --- index of the attribute table field, where information about roads direction is stored.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``directionFieldId`` ---道路の方向に関する情報が格納されている属性テーブルのフィールドのインデックス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If ``-1``, then don't use this info at all.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``-1`` 、その後、まったくこの情報を使用しない場合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>An integer.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``directDirectionValue`` --- field value for roads with direct direction (moving from first line point to last one).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``directDirectionValue`` ---順方向（線の最初の点から最後の点へ移動）の道に対するフィールド値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A string.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``reverseDirectionValue`` --- field value for roads with reverse direction (moving from last line point to first one).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``reverseDirectionValue`` ---逆方向（線の最後の点から最初の点へ移動）の道に対するフィールド値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A string.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``bothDirectionValue`` --- field value for bidirectional roads (for such roads we can move from first point to last and from last to first).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``bothDirectionValue`` ---双方向道路に対するフィールド値（例えば最初の点から最後まで、また最後から最初まで移動できる道に対する）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A string.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>It is necessary then to create a strategy for calculating edge properties</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>それから、辺性質を計算するための戦略を作成することが必要です</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>And tell the director about this strategy</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>そして、ディレクターにこの戦略について教えます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Also we can define several points, which will be used in the analysis.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>分析に使用されるいくつかのポイントを定義することもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For example</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>例えば</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Now all is in place so we can build the graph and "tie" these points to it</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これですべてが整いましたので、グラフを構築し、それにこれらの点を「結びつける」ことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Building the graph can take some time (which depends on the number of features in a layer and layer size).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>グラフを構築するには（レイヤー中の地物数とレイヤーのサイズに応じて）いくらか時間がかかることがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``tiedPoints`` is a list with coordinates of "tied" points.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``tiedPoints`` は「結びつけられた」点の座標を持つリストです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>When the build operation is finished we can get the graph and use it for the analysis</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ビルド操作が完了するとグラフが得られ、それを分析のために使用できます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>With the next code we can get the vertex indexes of our points</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次のコードで、点の頂点インデックスを取得できます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Graph analysis</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>グラフ分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Networks analysis is used to find answers to two questions: which vertexes are connected and how to find a shortest path.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ネットワーク分析はこの二つの質問に対する答えを見つけるために使用されます：どの頂点が接続されているか、どのように最短経路を検索するか。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>To solve these problems the network analysis library provides Dijkstra's algorithm.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これらの問題を解決するため、ネットワーク解析ライブラリではダイクストラのアルゴリズムを提供しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Dijkstra's algorithm finds the shortest route from one of the vertexes of the graph to all the others and the values of the optimization parameters.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ダイクストラ法は、グラフの１つの頂点から他のすべての頂点への最短ルートおよび最適化パラメーターの値を見つけます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The results can be represented as a shortest path tree.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>結果は、最短経路木として表現できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>only one vertex has no incoming edges — the root of the tree</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>流入する辺がない頂点が1つだけあります - 木の根</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>all other vertexes have only one incoming edge</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>他のすべての頂点には流入する辺が１つだけあります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>if vertex B is reachable from vertex A, then the path from A to B is the single available path and it is optimal (shortest) on this graph</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>頂点Bが頂点Aから到達可能である場合、このグラフ上のAからBへの経路は、単一の利用可能な経路であり、それは最適（最短）です</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Finding shortest paths</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>最短経路を見つける</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>At this point we have the path, in the form of the inverted list of vertexes (vertexes are listed in reversed order from end point to start point) that will be visited during traveling by this path.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>この時点において、この経路で走行中に訪問される頂点の反転リストの形（頂点は逆順で終点から始点へと列挙されている）で、経路が得られます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Areas of availability</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>利用可能領域</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The area of availability for vertex A is the subset of graph vertexes that are accessible from vertex A and the cost of the paths from A to these vertexes are not greater that some value.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>頂点Aに対する利用可能領域とは、頂点Aから到達可能であり、Aからこれらの頂点までの経路のコストがある値以下になるような、グラフの頂点の部分集合です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>More clearly this can be shown with the following example: "There is a fire station. Which parts of city can a fire truck reach in 5 minutes? 10 minutes? 15 minutes?". Answers to these questions are fire station's areas of availability.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>より明確に、これは次の例で示すことができます。「消防署があります。消防車が5分、10分、15分で到達できるのは市内のどの部分ですか？」。これらの質問への回答が消防署の利用可能領域です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A more difficult problem is to get the borders of the area of availability.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>より難しい問題は、利用可能領域の境界を取得することです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The bottom border is the set of vertexes that are still accessible, and the top border is the set of vertexes that are not accessible.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>下限はまだ到達できる頂点の集合であり、上限は到達できない頂点の集合です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In fact this is simple: it is the availability border based on the edges of the shortest path tree for which the source vertex of the edge is accessible and the target vertex of the edge is not.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>実際にはこれは簡単です：それは、辺の元頂点が到達可能であり辺の先頂点が到達可能ではないような、最短経路木の辺に基づく利用可能境界です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Here is an example</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>例です</seg>
      </tuv>
    </tu>
  </body>
</tmx>
