# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-19 13:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../docs/training_manual/spatial_databases/geometry.rst:2
msgid "|LS| Geometry Construction"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:4
msgid ""
"In this section we are going to delve a little deeper into how simple "
"geometries are constructed in SQL. In reality, you will probably use a "
"GIS like QGIS to create complex geometries using their digitising tools; "
"however, understanding how they are formulated can be handy for writing "
"queries and understanding how the database is assembled."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:10
msgid ""
"**The goal of this lesson:** To better understand how to create spatial "
"entities directly in PostgreSQL/PostGIS."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:16
msgid "Creating Linestrings"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:18
msgid ""
"Going back to our :kbd:`address` database, let's get our streets table "
"matching the others; i.e., having a constraint on the geometry, an index "
"and an entry in the geometry_columns table."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:23
msgid "|TY| |moderate|"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:25
msgid ""
"Modify the :kbd:`streets` table so that it has a geometry column of type "
"ST_LineString."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:27
msgid "Don't forget to do the accompanying update to the geometry columns table!"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:29
msgid ""
"Also add a constraint to prevent any geometries being added that are not "
"LINESTRINGS or null."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:31
msgid "Create a spatial index on the new geometry column"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:33
msgid ":ref:`Check your results <geometry-1>`"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:35
msgid ""
"Now let's insert a linestring into our streets table. In this case we "
"will update an existing street record:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:44
msgid ""
"Take a look at the results in QGIS. (You may need to right-click on the "
"streets layer in the 'Layers' panel, and choose 'Zoom to layer extent'.)"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:47
msgid ""
"Now create some more streets entries - some in QGIS and some from the "
"command line."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:52
msgid "Creating Polygons"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:54
msgid ""
"Creating polygons is just as easy. One thing to remember is that by "
"definition, polygons have at least four vertices, with the last and first"
" being co-located:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:62
msgid ""
"A polygon requires double brackets around its coordinate list; this is to"
" allow you to add complex polygons with multiple unconnected areas. For "
"instance"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:74
msgid ""
"If you followed this step, you can check what it did by loading the "
"cities dataset into QGIS, opening its attribute table, and selecting the "
"new entry. Note how the two new polygons behave like one polygon."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:81
msgid "Exercise: Linking Cities to People"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:83
msgid "For this exercise you should do the following:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:85
msgid "Delete all data from your people table."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:86
msgid ""
"Add a foreign key column to people that references the primary key of the"
" cities table."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:88
msgid "Use QGIS to capture some cities."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:89
msgid ""
"Use SQL to insert some new people records, ensuring that each has an "
"associated street and city."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:92
msgid "Your updated people schema should look something like this:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:120
msgid ":ref:`Check your results <geometry-2>`"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:124
msgid "Looking at Our Schema"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:126
msgid "By now our schema should be looking like this:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:133
msgid "|TY| |hard|"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:135
msgid ""
"Create city boundaries by computing the minimum convex hull of all "
"addresses for that city and computing a buffer around that area."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:140
msgid "Access Sub-Objects"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:142
msgid ""
"With the SFS-Model functions, you have a wide variety of options to "
"access sub-objects of SFS Geometries. When you want to select the first "
"vertex point of every polygon geometry in the table myPolygonTable, you "
"have to do this in this way:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:147
msgid "Transform the polygon boundary to a linestring:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:154
msgid "Select the first vertex point of the resultant linestring:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:165
msgid "Data Processing"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:167
msgid ""
"PostGIS supports all OGC SFS/MM standard conform functions. All these "
"functions start with ``ST_``."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:171
msgid "Clipping"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:173
msgid ""
"To clip a subpart of your data you can use the ``ST_INTERSECT()`` "
"function. To avoid empty geometries, use:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:194
msgid "Building Geometries from Other Geometries"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:196
msgid ""
"From a given point table, you want to generate a linestring. The order of"
" the points is defined by their :kbd:`id`. Another ordering method could "
"be a timestamp, such as the one you get when you capture waypoints with a"
" GPS receiver."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:204
msgid ""
"To create a linestring from a new point layer called 'points', you can "
"run the following command:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:216
msgid ""
"To see how it works without creating a new layer, you could also run this"
" command on the 'people' layer, although of course it would make little "
"real-world sense to do this."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:224
msgid "Geometry Cleaning"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:226
msgid ""
"You can get more information for this topic in `this blog entry "
"<https://linfiniti.com/?s=cleangeometry>`_."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:230
msgid "Differences between tables"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:232
msgid ""
"To detect the difference between two tables with the same structure, you "
"can use the PostgreSQL keyword ``EXCEPT``:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:241
msgid ""
"As the result, you will get all records from table_a which are not stored"
" in table_b."
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:245
msgid "Tablespaces"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:247
msgid ""
"You can define where postgres should store its data on disk by creating "
"tablespaces:"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:254
msgid ""
"When you create a database, you can then specify which tablespace to use "
"e.g.::"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:259
msgid "|IC|"
msgstr ""

#: ../../docs/training_manual/spatial_databases/geometry.rst:261
msgid ""
"You've learned how to create more complex geometries using PostGIS "
"statements. Keep in mind that this is mostly to improve your tacit "
"knowledge when working with geo-enabled databases through a GIS frontend."
" You usually won't need to actually enter these statements manually, but "
"having a general idea of their structure will help you when using a GIS, "
"especially if you encounter errors that would otherwise seem cryptic."
msgstr ""

