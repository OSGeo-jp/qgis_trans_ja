# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-19 13:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../docs/user_manual/managing_data_source/supported_data.rst:5
msgid "Exploring Data Formats and Fields"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:20
msgid "Raster data"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:22
msgid ""
"GIS raster data are matrices of discrete cells that represent features / "
"phenomena on, above or below the earth's surface. Each cell in the raster"
" grid has the same size, and cells are usually rectangular (in QGIS they "
"will always be rectangular). Typical raster datasets include remote "
"sensing data, such as aerial photography, or satellite imagery and "
"modelled data, such as elevation or temperature."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:30
msgid ""
"Unlike vector data, raster data typically do not have an associated "
"database record for each cell. They are geocoded by pixel resolution and "
"the X/Y coordinate of a corner pixel of the raster layer. This allows "
"QGIS to position the data correctly on the map canvas."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:36
msgid ""
"The GeoPackage format is convenient for storing raster data when working "
"with QGIS. The popular and powerful GeoTiff format is a good alternative."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:40
msgid ""
"QGIS makes use of georeference information inside the raster layer (e.g.,"
" :index:`GeoTiff`) or an associated *world file* to properly display the "
"data."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:49
msgid "Vector Data"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:51
msgid ""
"Many of the features and tools available in QGIS work the same, "
"regardless the vector data source. However, because of the differences in"
" format specifications (GeoPackage, ESRI Shapefile, MapInfo and "
"MicroStation file formats, AutoCAD DXF, PostGIS, SpatiaLite, DB2, Oracle "
"Spatial, MSSQL Spatial databases, and many more), QGIS may handle some of"
" their properties differently. Support is provided by the `OGR Simple "
"Feature Library <https://gdal.org/drivers/vector/index.html>`_. This "
"section describes how to work with these specificities."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:64
msgid ""
"QGIS supports (multi)point, (multi)line, (multi)polygon, CircularString, "
"CompoundCurve, CurvePolygon, MultiCurve, MultiSurface feature types, all "
"optionally with Z and/or M values."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:68
msgid ""
"You should also note that some drivers don't support some of these "
"feature types, like CircularString, CompoundCurve, CurvePolygon, "
"MultiCurve, MultiSurface feature type. QGIS will convert them."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:76
msgid "GeoPackage"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:77
msgid ""
"The `GeoPackage <https://www.geopackage.org/>`_ (GPKG) format is "
"platform-independent, and is implemented as a SQLite database container, "
"and can be used to store both vector and raster data. The format was "
"defined by the Open Geospatial Consortium (OGC), and was published in "
"2014."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:83
msgid "GeoPackage can be used to store the following in a SQLite database:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:85
msgid "**vector** features"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:86
msgid "**tile matrix sets of imagery** and **raster** maps"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:87
msgid "attributes (non-spatial data)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:88
msgid "extensions"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:90
msgid ""
"Since QGIS version 3.8, GeoPackage can also store QGIS projects. "
"GeoPackage layers can have JSON fields."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:93
msgid "GeoPackage is the default format for vector data in QGIS."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:99
msgid "ESRI Shapefile format"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:100
msgid ""
"The ESRI Shapefile format is still one of the most used vector file "
"formats, even if it has some limitations compared to for instance "
"GeoPackage and SpatiaLite."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:104
msgid ""
"An ESRI Shapefile format dataset consists of several files. The following"
" three are required:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:107
msgid ":file:`.shp` file containing the feature geometries"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:108
msgid ":file:`.dbf` file containing the attributes in dBase format"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:109
msgid ":file:`.shx` index file"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:111
msgid ""
"An ESRI Shapefile format dataset can also include a file with a "
":file:`.prj` suffix, which contains projection information. While it is "
"very useful to have a projection file, it is not mandatory. A Shapefile "
"format dataset can contain additional files. For further details, see the"
" the ESRI technical specification at "
"https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:119
msgid ""
"GDAL 3.1 has read-write support for compressed ESRI Shapefile format "
"(:file:`shz` and :file:`shp.zip`)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:122
msgid "**Improving Performance for ESRI Shapefile format datasets**"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:124
msgid ""
"To improve the drawing performance for an ESRI Shapefile format dataset, "
"you can create a spatial index. A spatial index will improve the speed of"
" both zooming and panning. Spatial indexes used by QGIS have a "
":file:`.qix` extension."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:129
msgid "Use these steps to create the index:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:131
msgid "Load an ESRI Shapefile format dataset (see :ref:`browser_panel`)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:132
msgid ""
"Open the :guilabel:`Layer Properties` dialog by double-clicking on the "
"layer name in the legend or by right-clicking and choosing "
":menuselection:`Properties...` from the context menu"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:135
msgid ""
"In the :guilabel:`Source` tab, click the :guilabel:`Create Spatial Index`"
" button"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:138
msgid "**Problem loading a .prj file**"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:140
msgid ""
"If you load an ESRI Shapefile format dataset with a :file:`.prj` file and"
" QGIS is not able to read the coordinate reference system from that file,"
" you will need to define the proper projection manually in the "
":menuselection:`Layer Properties --> Source` tab of the layer by clicking"
" the |setProjection| :sup:`Select CRS` button. This is due to the fact "
"that :file:`.prj` files often do not provide the complete projection "
"parameters as used in QGIS and listed in the :guilabel:`CRS` dialog."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:149
msgid ""
"For the same reason, if you create a new ESRI Shapefile format dataset "
"with QGIS, two different projection files are created: a :file:`.prj` "
"file with limited projection parameters, compatible with ESRI software, "
"and a :file:`.qpj` file, providing all the parameters of the CRS. "
"Whenever QGIS finds a :file:`.qpj` file, it will be used instead of the "
":file:`.prj`."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:162
msgid "Delimited Text Files"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:164
msgid ""
"Delimited text files are very common and widely used because of their "
"simplicity and readability -- data can be viewed and edited in a plain "
"text editor. A delimited text file is tabular data with columns separated"
" by a defined character and rows separated by line breaks. The first row "
"usually contains the column names. A common type of delimited text file "
"is a CSV (Comma Separated Values), with columns separated by commas. "
"Delimited text files can also contain positional information (see "
":ref:`csv_geometry`)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:175
msgid ""
"QGIS allows you to load a delimited text file as a layer or an ordinary "
"table (see :ref:`browser_panel` or :ref:`vector_loading_csv`). First "
"check that the file meets the following requirements:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:179
msgid ""
"The file must have a delimited header row of field names. This must be "
"the first line of the data (ideally the first row in the text file)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:182
msgid ""
"If geometry should be enabled, the file must contain field(s) that define"
" the geometry. These field(s) can have any name."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:184
msgid ""
"The X and Y coordinates fields (if geometry is defined by coordinates) "
"must be specified as numbers. The coordinate system is not important."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:187
msgid ""
"If you have a CSV file with non-string columns, you must have an "
"accompanying CSVT file (see section :ref:`csvt_files`)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:190
msgid ""
"The elevation point data file :file:`elevp.csv` in the QGIS sample "
"dataset (see section :ref:`label_sampledata`) is an example of a valid "
"text file:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:202
msgid "Some things to note about the text file:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:204
msgid ""
"The example text file uses ``;`` (semicolon) as delimiter (any character "
"can be used to delimit the fields)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:206
msgid ""
"The first row is the header row. It contains the fields ``X``, ``Y`` and "
"``ELEV``."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:208
msgid "No quotes (``\"``) are used to delimit text fields"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:209
msgid "The X coordinates are contained in the ``X`` field"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:210
msgid "The Y coordinates are contained in the ``Y`` field"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:215
msgid "Storing geometry information in delimited text files"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:217
msgid "Delimited text files can contain geometry information in two main forms:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:220
msgid ""
"As coordinates in separate columns (eg. ``Xcol``, ``Ycol``... ), for "
"point geometry data;"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:222
msgid ""
"As well-known text (WKT) representation of geometry in a single column, "
"for any geometry type."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:225
msgid ""
"Features with curved geometries (CircularString, CurvePolygon and "
"CompoundCurve) are supported. Here are some examples of geometry types in"
" a delimited text file with geometries coded as WKT::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:237
msgid "Delimited text files also support Z and M coordinates in geometries::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:246
msgid "Using CSVT file to control field formatting"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:248
msgid ""
"When loading CSV files, the OGR driver assumes all fields are strings "
"(i.e. text) unless it is told otherwise. You can create a CSVT file to "
"tell OGR (and QGIS) the data type of the different columns:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Type"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Name"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Example"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Whole number"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Integer"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "4"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Decimal number"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Real"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "3.456"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Date"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Date (YYYY-MM-DD)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "2016-07-28"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Time"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Time (HH:MM:SS+nn)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "18:33:12+00"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "Date & Time"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "DateTime (YYYY-MM-DD HH:MM:SS+nn)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:1
msgid "2016-07-28 18:33:12+00"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:262
msgid ""
"The CSVT file is a **ONE line** plain text file with the data types in "
"quotes and separated by commas, e.g.::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:267
msgid "You can even specify width and precision of each column, e.g.::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:271
msgid ""
"This file is saved in the same folder as the :file:`.csv` file, with the "
"same name, but :file:`.csvt` as the extension."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:274
msgid ""
"*You can find more information at* `GDAL CSV Driver "
"<https://gdal.org/drivers/vector/csv.html>`_."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:282
msgid "PostGIS Layers"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:284
msgid ""
"PostGIS layers are stored in a PostgreSQL database. The advantages of "
"PostGIS are spatial indexing, filtering and querying capabilities. Using "
"PostGIS, vector functions such as select and identify work more "
"accurately than they do with OGR layers in QGIS."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:293
msgid "**PostGIS Layers**"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:295
msgid ""
"Normally, a PostGIS layer is identified by an entry in the "
"geometry_columns table. QGIS can load layers that do not have an entry in"
" the geometry_columns table. This includes both tables and views. Refer "
"to your PostgreSQL manual for information on creating views."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:302
msgid ""
"This section contains some details on how QGIS accesses PostgreSQL "
"layers. Most of the time, QGIS should simply provide you with a list of "
"database tables that can be loaded, and it will load them on request. "
"However, if you have trouble loading a PostgreSQL table into QGIS, the "
"information below may help you understand QGIS messages and give you "
"directions for modifying the PostgreSQL table or view definition to allow"
" QGIS to load it."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:310
msgid "Primary key"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:312
msgid ""
"QGIS requires that PostgreSQL layers contain a column that can be used as"
" a unique key for the layer. For tables, this usually means that the "
"table needs a primary key, or a column with a unique constraint on it. In"
" QGIS, this column needs to be of type int4 (an integer of size 4 bytes)."
" Alternatively, the ctid column can be used as primary key. If a table "
"lacks these items, the oid column will be used instead. Performance will "
"be improved if the column is indexed (note that primary keys are "
"automatically indexed in PostgreSQL)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:321
msgid ""
"QGIS offers a checkbox **Select at id** that is activated by default. "
"This option gets the ids without the attributes, which is faster in most "
"cases."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:326
msgid "View"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:328
msgid ""
"If the PostgreSQL layer is a view, the same requirement exists, but views"
" do not always have primary keys or columns with unique constraints on "
"them. You have to define a primary key field (has to be integer) in the "
"QGIS dialog before you can load the view. If a suitable column does not "
"exist in the view, QGIS will not load the layer. If this occurs, the "
"solution is to alter the view so that it does include a suitable column "
"(a type of integer and either a primary key or with a unique constraint, "
"preferably indexed)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:336
msgid ""
"As for table, a checkbox **Select at id** is activated by default (see "
"above for the meaning of the checkbox). It can make sense to disable this"
" option when you use expensive views."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:343
msgid "QGIS layer_style table and database backup"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:345
msgid ""
"If you want to make a backup of your PostGIS database using the "
":file:`pg_dump` and :file:`pg_restore` commands, and the default layer "
"styles as saved by QGIS fail to restore afterwards, you need to set the "
"XML option to :file:`DOCUMENT` before the restore command:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:356
msgid "Filter database side"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:358
msgid ""
"QGIS allows to filter features already on server side. Check "
":menuselection:`Settings --> Options --> Data Sources -->` |checkbox| "
":menuselection:`Execute expressions on server-side if possible` to do so."
" Only supported expressions will be sent to the database. Expressions "
"using unsupported operators or functions will gracefully fallback to "
"local evaluation."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:367
msgid "Support of PostgreSQL data types"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:369
msgid ""
"Data types supported by the PostgreSQL provider include: integer, float, "
"boolean, binary object, varchar, geometry, timestamp, array, hstore and "
"json."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:378
msgid "Importing Data into PostgreSQL"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:380
msgid ""
"Data can be imported into PostgreSQL/PostGIS using several tools, "
"including the DB Manager plugin and the command line tools shp2pgsql and "
"ogr2ogr."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:385
msgid "DB Manager"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:387
msgid ""
"QGIS comes with a core plugin named |dbManager| :sup:`DB Manager`. It can"
" be used to load data, and it includes support for schemas. See section "
":ref:`dbmanager` for more information."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:392
msgid "shp2pgsql"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:394
msgid ""
"PostGIS includes a utility called **shp2pgsql**, that can be used to "
"import Shapefile format datasets into a PostGIS-enabled database. For "
"example, to import a Shapefile format dataset named :file:`lakes.shp` "
"into a PostgreSQL database named ``gis_data``, use the following "
"command::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:402
msgid ""
"This creates a new layer named ``lakes_new`` in the ``gis_data`` "
"database. The new layer will have a spatial reference identifier (SRID) "
"of 2964. See section :ref:`label_projections` for more information about "
"spatial reference systems and projections."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:411
msgid "**Exporting datasets from PostGIS**"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:413
msgid ""
"There is also a tool for exporting PostGIS datasets to Shapefile format: "
"**pgsql2shp**. It is shipped within your PostGIS distribution."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:421
msgid "ogr2ogr"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:423
msgid ""
"In addition to **shp2pgsql** and **DB Manager**, there is another tool "
"for feeding geographical data in PostGIS: **ogr2ogr**. It is part of your"
" GDAL installation."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:427
msgid "To import a Shapefile format dataset into PostGIS, do the following::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:432
msgid ""
"This will import the Shapefile format dataset :file:`alaska.shp` into the"
" PostGIS database *postgis* using the user *postgres* with the password "
"*topsecret* on the host server *myhost.de*."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:436
msgid ""
"Note that OGR must be built with PostgreSQL to support PostGIS. You can "
"verify this by typing (in |nix|)::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:442
msgid ""
"If you prefer to use the PostgreSQL's **COPY** command instead of the "
"default **INSERT INTO** method, you can export the following environment "
"variable (at least available on |nix| and |osx|)::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:448
msgid ""
"**ogr2ogr** does not create spatial indexes like **shp2pgsl** does. You "
"need to create them manually, using the normal SQL command **CREATE "
"INDEX** afterwards, as an extra step (as described in the next section "
":ref:`vector_improving_performance`)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:458
msgid "Improving Performance"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:460
msgid ""
"Retrieving features from a PostgreSQL database can be time-consuming, "
"especially over a network. You can improve the drawing performance of "
"PostgreSQL layers by ensuring that a PostGIS spatial index exists on each"
" layer in the database. PostGIS supports creation of a GiST (Generalized "
"Search Tree) index to speed up spatial searching (GiST index information "
"is taken from the PostGIS documentation available at "
"https://postgis.net)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:467
msgid ""
"You can use the DBManager to create an index for your layer. You should "
"first select the layer and click on :menuselection:`Table --> Edit "
"table`, go to :menuselection:`Indexes` tab and click on :guilabel:`Add "
"Spatial Index`."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:473
msgid "The syntax for creating a GiST index is::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:479
msgid ""
"Note that for large tables, creating the index can take a long time. Once"
" the index is created, you should perform a ``VACUUM ANALYZE``. See the "
"PostGIS documentation (POSTGIS-PROJECT in :ref:`literature_and_web`) for "
"more information."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:484
msgid "The following example creates a GiST index::"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:506
msgid "Vector layers crossing 180 |degrees| longitude"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:508
msgid ""
"Many GIS packages don't wrap vector maps with a geographic reference "
"system (lat/lon) crossing the 180 degrees longitude line "
"(http://postgis.refractions.net/documentation/manual-2.0/ST_Shift_Longitude.html)."
" As result, if we open such a map in QGIS, we could see two widely "
"separated locations, that should appear near each other. In "
"Figure_vector_crossing_, the tiny point on the far left of the map canvas"
" (Chatham Islands) should be within the grid, to the right of the New "
"Zealand main islands."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:522
msgid "Map in lat/lon crossing the 180 |degrees| longitude line"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:524
msgid ""
"A work-around is to transform the longitude values using PostGIS and the "
"**ST_Shift_Longitude** function. This function reads every point/vertex "
"in every component of every feature in a geometry, and if the longitude "
"coordinate is < 0 |degrees|, it adds 360 |degrees| to it. The result is a"
" 0 |degrees| - 360 |degrees| version of the data to be plotted in a 180 "
"|degrees|-centric map."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:538
msgid ""
"Crossing 180 |degrees| longitude applying the **ST_Shift_Longitude** "
"function"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:542
msgid "Usage"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:544
msgid ""
"Import data into PostGIS (:ref:`vector_import_data_in_postgis`) using, "
"for example, the DB Manager plugin."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:546
msgid ""
"Use the PostGIS command line interface to issue the following command (in"
" this example, \"TABLE\" is the actual name of your PostGIS table): "
"``gis_data=# update TABLE set the_geom=ST_Shift_Longitude(the_geom);``"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:549
msgid ""
"If everything went well, you should receive a confirmation about the "
"number of features that were updated. Then you'll be able to load the map"
" and see the difference (Figure_vector_crossing_map_)."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:558
msgid "SpatiaLite Layers"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:560
msgid ""
"If you want to save a vector layer using the SpatiaLite format, you can "
"do this by following instructions at :ref:`general_saveas`. You select "
"``SpatiaLite`` as :guilabel:`Format` and enter both :guilabel:`File name`"
" and :guilabel:`Layer name`."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:565
msgid ""
"Also, you can select ``SQLite`` as format and then add ``SPATIALITE=YES``"
" in the :menuselection:`Custom Options --> Data source` field. This tells"
" GDAL to create a SpatiaLite database. See also "
"https://gdal.org/drivers/vector/sqlite.html."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:571
msgid ""
"QGIS also supports editable views in SpatiaLite. For SpatiaLite data "
"management, you can also use the core plugin :ref:`DB Manager "
"<dbmanager>`."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:575
msgid ""
"If you want to create a new SpatiaLite layer, please refer to section "
":ref:`vector_create_spatialite`."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:584
msgid "GeoJSON specific parameters"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:586
msgid ""
"When :ref:`exporting layers <general_saveas>` to GeoJSON, there are some "
"specific :guilabel:`Layer Options` available. These options come from "
"GDAL which is responsible for the writing of the file:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:590
msgid ""
":guilabel:`COORDINATE_PRECISION` the maximum number of digits after the "
"decimal separator to write in coordinates. Defaults to 15 (note: for Lat "
"Lon coordinates 6 is considered enough). Truncation will occur to remove "
"trailing zeros."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:594
msgid ""
":guilabel:`RFC7946` by default GeoJSON 2008 will be used. If set to YES, "
"the updated RFC 7946 standard will be used. Default is NO (thus GeoJSON "
"2008). See https://gdal.org/drivers/vector/geojson.html#rfc-7946-write-"
"support for the main differences, in short: only EPSG:4326 is allowed, "
"other crs's will be transformed, polygons will be written such as to "
"follow the right-hand rule for orientation, values of a \"bbox\" array "
"are [west, south, east, north], not [minx, miny, maxx, maxy]. Some "
"extension member names are forbidden in FeatureCollection, Feature and "
"Geometry objects, the default coordinate precision is 7 decimal digits"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:605
msgid ""
":guilabel:`WRITE_BBOX` set to YES to include the bounding box of the "
"geometries at the feature and feature collection level"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:608
msgid ""
"Besides GeoJSON there is also an option to export to \"GeoJSON - Newline "
"Delimited\" (see https://gdal.org/drivers/vector/geojsonseq.html). "
"Instead of a FeatureCollection with Features, you can stream one type "
"(probably only Features) sequentially separated with newlines."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:614
msgid "GeoJSON - Newline Delimited has some specific Layer options availabe too:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:616
msgid ":guilabel:`COORDINATE_PRECISION` see above (same as for GeoJSON)"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:617
msgid ""
":guilabel:`RS` whether to start records with the RS=0x1E character. The "
"difference is how the features are separated: only by a newline (LF) "
"character (Newline Delimited JSON, geojsonl) or by also prepending a "
"record-separator (RS) character (giving GeoJSON Text Sequences, "
"geojsons). Default to NO. Files are given the :file:`.json` extension if "
"extension is not provided."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:630
msgid "DB2 Spatial Layers"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:632
msgid ""
"IBM DB2 for Linux, Unix and Windows (DB2 LUW), IBM DB2 for z/OS "
"(mainframe) and IBM DashDB products allow users to store and analyse "
"spatial data in relational table columns. The DB2 provider for QGIS "
"supports the full range of visualization, analysis and manipulation of "
"spatial data in these databases."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:643
msgid ""
"User documentation on these capabilities can be found at the `DB2 z/OS "
"KnowledgeCenter`_, `DB2 LUW KnowledgeCenter`_ and `DB2 DashDB "
"KnowledgeCenter`_."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:647
msgid ""
"For more information about working with the DB2 spatial capabilities, "
"check out the `DB2 Spatial Tutorial`_ on IBM DeveloperWorks."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:650
msgid ""
"The DB2 provider currently only supports the Windows environment through "
"the Windows ODBC driver."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:653
msgid "The client running QGIS needs to have one of the following installed:"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:655
msgid "DB2 LUW"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:656
msgid "IBM Data Server Driver Package"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:657
msgid "IBM Data Server Client"
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:659
msgid ""
"To open a DB2 data in QGIS, see the :ref:`browser_panel` or "
":ref:`vector_loading_database` section."
msgstr ""

#: ../../docs/user_manual/managing_data_source/supported_data.rst:662
msgid ""
"If you are accessing a DB2 LUW database on the same machine or using DB2 "
"LUW as a client, the DB2 executables and supporting files need to be "
"included in the Windows path. This can be done by creating a batch file "
"like the following with the name **db2.bat** and including it in the "
"directory **%OSGEO4W_ROOT%/etc/ini**::"
msgstr ""

