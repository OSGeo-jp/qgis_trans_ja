# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-19 13:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../docs/user_manual/processing/console.rst:4
msgid "Using processing algorithms from the console"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:11
msgid ""
"The console allows advanced users to increase their productivity and "
"perform complex operations that cannot be performed using any of the "
"other GUI elements of the processing framework. Models involving several "
"algorithms can be defined using the command-line interface, and "
"additional operations such as loops and conditional sentences can be "
"added to create more flexible and powerful workflows."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:18
msgid ""
"There is not a processing console in QGIS, but all processing commands "
"are available instead from the QGIS built-in :ref:`Python console "
"<console>`.  That means that you can incorporate those commands into your"
" console work and connect processing algorithms to all the other features"
" (including methods from the QGIS API) available from there."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:24
msgid ""
"The code that you can execute from the Python console, even if it does "
"not call any specific processing method, can be converted into a new "
"algorithm that you can later call from the toolbox, the graphical modeler"
" or any other component, just like you do with any other algorithm. In "
"fact, some algorithms that you can find in the toolbox are simple "
"scripts."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:31
msgid ""
"In this section, we will see how to use processing algorithms from the "
"QGIS Python console, and also how to write algorithms using Python."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:35
msgid "Calling algorithms from the Python console"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:37
msgid ""
"The first thing you have to do is to import the processing functions with"
" the following line:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:44
msgid ""
"Now, there is basically just one (interesting) thing you can do with that"
" from the console: execute an algorithm. That is done using the "
":meth:`run <qgis.core.QgsProcessingAlgorithm.run>` method, which takes "
"the name of the algorithm to execute as its first parameter, and then a "
"variable number of additional parameters depending on the requirements of"
" the algorithm. So the first thing you need to know is the name of the "
"algorithm to execute. That is not the name you see in the toolbox, but "
"rather a unique commandâ€“line name. To find the right name for your "
"algorithm, you can use the :class:`processingRegistry "
"<qgis.core.QgsProcessingRegistry>`. Type the following line in your "
"console:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:61
msgid ""
"You will see something like this (with some extra dashes added to improve"
" readability)."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:81
msgid ""
"That's a list of all the available algorithm IDs, sorted by provider name"
" and algorithm name, along with their corresponding names."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:84
msgid ""
"Once you know the command-line name of the algorithm, the next thing to "
"do is to determine the right syntax to execute it. That means knowing "
"which parameters are needed when calling the ``run()`` method."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:88
msgid ""
"There is a method to describe an algorithm in detail, which can be used "
"to get a list of the parameters that an algorithm requires and the "
"outputs that it will generate. To get this information, you can use the "
"``algorithmHelp(id_of_the_algorithm)`` method. Use the ID of the "
"algorithm, not the full descriptive name."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:94
msgid ""
"Calling the method with ``native:buffer`` as parameter (``qgis:buffer`` "
"is an alias for ``native:buffer`` and will also work), you get the "
"following description:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:222
msgid ""
"Now you have everything you need to run any algorithm. As we have already"
" mentioned, algorithms can be run using: ``run()``. Its syntax is as "
"follows:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:230
msgid ""
"Where parameters is a dictionary of parameters that depend on the "
"algorithm you want to run, and is exactly the list that the "
"``algorithmHelp()`` method gives you."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:246
msgid ""
"If a parameter is optional and you do not want to use it, then don't "
"include it in the dictionary."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:249
msgid "If a parameter is not specified, the default value will be used."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:251
msgid ""
"Depending on the type of parameter, values are introduced differently. "
"The next list gives a quick review of how to introduce values for each "
"type of input parameter:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:254
msgid ""
"Raster Layer, Vector Layer or Table. Simply use a string with the name "
"that identifies the data object to use (the name it has in the QGIS Table"
" of Contents) or a filename (if the corresponding layer is not opened, it"
" will be opened but not added to the map canvas). If you have an instance"
" of a QGIS object representing the layer, you can also pass it as "
"parameter."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:259
msgid ""
"Enumeration. If an algorithm has an enumeration parameter, the value of "
"that parameter should be entered using an integer value. To know the "
"available options, you can use the ``algorithmHelp()`` command, as above."
" For instance, the ``native:buffer`` algorithm has an enumeration called "
"JOIN_STYLE:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:280
msgid ""
"In this case, the parameter has three options. Notice that ordering is "
"zero-based."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:282
msgid "Boolean.  Use ``True`` or ``False``."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:283
msgid ""
"Multiple input. The value is a string with input descriptors separated by"
" semicolons (``;``). As in the case of single layers or tables, each "
"input descriptor can be the data object name, or its file path."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:286
msgid ""
"Table Field from XXX. Use a string with the name of the field to use. "
"This parameter is case-sensitive."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:288
msgid ""
"Fixed Table. Type the list of all table values separated by commas "
"(``,``) and enclosed between quotes (``\"``). Values start on the upper "
"row and go from left to right. You can also use a 2-D array of values "
"representing the table."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:291
msgid "CRS. Enter the EPSG code number of the desired CRS."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:292
msgid ""
"Extent. You must use a string with ``xmin``, ``xmax``, ``ymin`` and "
"``ymax`` values separated by commas (``,``)."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:295
msgid ""
"Boolean, file, string and numerical parameters do not need any additional"
" explanations."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:298
msgid ""
"Input parameters such as strings, booleans, or numerical values have "
"default values. The default value is used if the corresponding parameter "
"entry is missing."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:301
msgid ""
"For output data objects, type the file path to be used to save it, just "
"as it is done from the toolbox. If the output object is not specified, "
"the result is saved to a temporary file (or skipped if it is an optional "
"output). The extension of the file determines the file format. If you "
"enter a file extension not supported by the algorithm, the default file "
"format for that output type will be used, and its corresponding extension"
" appended to the given file path."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:309
msgid ""
"Unlike when an algorithm is executed from the toolbox, outputs are not "
"added to the map canvas if you execute that same algorithm from the "
"Python console using ``run()``, but ``runAndLoadResults()`` will do that."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:314
msgid ""
"The ``run`` method returns a dictionary with one or more output names "
"(the ones shown in the algorithm description) as keys and the file paths "
"of those outputs as values:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:331
msgid ""
"You can load feature output by passing the corresponding file paths to "
"the ``load()`` method. Or you could use ``runAndLoadResults()`` instead "
"of ``run()`` to load them immediately."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:336
msgid ""
"If you want to open an algorithm dialog from the console you can use the "
"``createAlgorithmDialog`` method. The only mandatory parameter is the "
"algorithm name, but you can also define the dictionary of parameters so "
"that the dialog will be filled automatically:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:354
msgid "The ``execAlgorithmDialog`` method opens the dialog immediately:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:370
msgid "Creating scripts and running them from the toolbox"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:372
msgid ""
"You can create your own algorithms by writing Python code. Processing "
"scripts extend :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`, so you need to add some extra lines "
"of code to implement mandatory functions. You can find :guilabel:`Create "
"new script` (clean sheet) and :guilabel:`Create New Script from Template`"
" (template that includes code for mandatory functions of "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>`) under"
" the :guilabel:`Scripts` dropdown menu on the top of the Processing "
"toolbox. The Processing Script Editor will open, and that's where you "
"should type your code. Saving the script from there in the "
":file:`scripts` folder (the default folder when you open the save file "
"dialog) with a :file:`.py` extension should create the corresponding "
"algorithm."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:387
msgid ""
"The name of the algorithm (the one you will see in the toolbox) is "
"defined within the code."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:390
msgid ""
"Let's have a look at the following code, which defines a Processing "
"algorithm that performs a buffer operation with a user defined buffer "
"distance on a vector layer that is specified by the user, after first "
"smoothing the layer."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:454
msgid ""
"After doing the necessary imports, the following "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` "
"functions are specified:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:458
msgid ""
":meth:`name <qgis.core.QgsProcessingAlgorithm.name>`: The id of the "
"algorithm (lowercase)."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:460
msgid ""
":meth:`displayName <qgis.core.QgsProcessingAlgorithm.displayName>`: A "
"human readable name for the algorithm."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:462
msgid ""
":meth:`createInstance <qgis.core.QgsProcessingAlgorithm.createInstance>`:"
" Create a new instance of the algorithm class."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:464
msgid ""
":meth:`initAlgorithm <qgis.core.QgsProcessingAlgorithm.initAlgorithm>`: "
"Configure the parameterDefinitions and outputDefinitions."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:467
msgid ""
"Here you describe the parameters and output of the algorithm.  In this "
"case, a feature source for the input, a feature sink for the result and a"
" number for the buffer distance."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:470
msgid ""
":meth:`processAlgorithm "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>`: Do the work."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:473
msgid ""
"Here we first run the ``smoothgeometry`` algorithm to smooth the "
"geometry, and then we run the ``buffer`` algorithm on the smoothed "
"output. To be able to run algorithms from within another algorithm we "
"have to define a dummy function for the ``onFinish`` parameter for "
"``run``. This is the ``no_post_process`` function. You can see how input "
"and output parameters are used as parameters to the ``smoothgeometry`` "
"and ``buffer`` algorithms."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:482
msgid ""
"There are a number of different parameter types available for input and "
"output. Below is an alphabetically sorted list:"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:485
msgid ""
":class:`QgsProcessingParameterAggregate "
"<qgis.core.QgsProcessingParameterAggregate>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:486
msgid ""
":class:`QgsProcessingParameterAuthConfig "
"<qgis.core.QgsProcessingParameterAuthConfig>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:487
msgid ":class:`QgsProcessingParameterBand <qgis.core.QgsProcessingParameterBand>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:488
msgid ""
":class:`QgsProcessingParameterBoolean "
"<qgis.core.QgsProcessingParameterBoolean>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:489
msgid ""
":class:`QgsProcessingParameterColor "
"<qgis.core.QgsProcessingParameterColor>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:490
msgid ""
":class:`QgsProcessingParameterCoordinateOperation "
"<qgis.core.QgsProcessingParameterCoordinateOperation>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:491
msgid ":class:`QgsProcessingParameterCrs <qgis.core.QgsProcessingParameterCrs>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:492
msgid ""
":class:`QgsProcessingParameterDatabaseSchema "
"<qgis.core.QgsProcessingParameterDatabaseSchema>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:493
msgid ""
":class:`QgsProcessingParameterDatabaseTable "
"<qgis.core.QgsProcessingParameterDatabaseTable>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:494
msgid ""
":class:`QgsProcessingParameterDateTime "
"<qgis.core.QgsProcessingParameterDateTime>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:495
msgid ""
":class:`QgsProcessingParameterDistance "
"<qgis.core.QgsProcessingParameterDistance>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:496
msgid ":class:`QgsProcessingParameterEnum <qgis.core.QgsProcessingParameterEnum>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:497
msgid ""
":class:`QgsProcessingParameterExpression "
"<qgis.core.QgsProcessingParameterExpression>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:498
msgid ""
":class:`QgsProcessingParameterExtent "
"<qgis.core.QgsProcessingParameterExtent>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:499
msgid ""
":class:`QgsProcessingParameterFeatureSink "
"<qgis.core.QgsProcessingParameterFeatureSink>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:500
msgid ""
":class:`QgsProcessingParameterFeatureSource "
"<qgis.core.QgsProcessingParameterFeatureSource>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:501
msgid ""
":class:`QgsProcessingParameterField "
"<qgis.core.QgsProcessingParameterField>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:502
msgid ""
":class:`QgsProcessingParameterFieldMapping  "
"<qgis.core.QgsProcessingParameterFieldMapping>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:503
msgid ":class:`QgsProcessingParameterFile <qgis.core.QgsProcessingParameterFile>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:504
msgid ""
":class:`QgsProcessingParameterFileDestination "
"<qgis.core.QgsProcessingParameterFileDestination>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:505
msgid ""
":class:`QgsProcessingParameterFolderDestination "
"<qgis.core.QgsProcessingParameterFolderDestination>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:506
msgid ""
":class:`QgsProcessingParameterLayout "
"<qgis.core.QgsProcessingParameterLayout>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:507
msgid ""
":class:`QgsProcessingParameterLayoutItem "
"<qgis.core.QgsProcessingParameterLayoutItem>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:508
msgid ""
":class:`QgsProcessingParameterMapLayer "
"<qgis.core.QgsProcessingParameterMapLayer>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:509
msgid ""
":class:`QgsProcessingParameterMapTheme "
"<qgis.core.QgsProcessingParameterMapTheme>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:510
msgid ""
":class:`QgsProcessingParameterMatrix "
"<qgis.core.QgsProcessingParameterMatrix>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:511
msgid ""
":class:`QgsProcessingParameterMeshLayer "
"<qgis.core.QgsProcessingParameterMeshLayer>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:512
msgid ""
":class:`QgsProcessingParameterMultipleLayers "
"<qgis.core.QgsProcessingParameterMultipleLayers>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:513
msgid ""
":class:`QgsProcessingParameterNumber "
"<qgis.core.QgsProcessingParameterNumber>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:514
msgid ""
":class:`QgsProcessingParameterPoint "
"<qgis.core.QgsProcessingParameterPoint>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:515
msgid ""
":class:`QgsProcessingParameterProviderConnection "
"<qgis.core.QgsProcessingParameterProviderConnection>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:516
msgid ""
":class:`QgsProcessingParameterRange "
"<qgis.core.QgsProcessingParameterRange>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:517
msgid ""
":class:`QgsProcessingParameterRasterDestination "
"<qgis.core.QgsProcessingParameterRasterDestination>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:518
msgid ""
":class:`QgsProcessingParameterRasterLayer "
"<qgis.core.QgsProcessingParameterRasterLayer>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:519
msgid ""
":class:`QgsProcessingParameterScale "
"<qgis.core.QgsProcessingParameterScale>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:520
msgid ""
":class:`QgsProcessingParameterString "
"<qgis.core.QgsProcessingParameterString>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:521
msgid ""
":class:`QgsProcessingParameterVectorDestination "
"<qgis.core.QgsProcessingParameterVectorDestination>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:522
msgid ""
":class:`QgsProcessingParameterVectorLayer "
"<qgis.core.QgsProcessingParameterVectorLayer>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:523
msgid ""
":class:`QgsProcessingParameterVectorTileWriterLayers "
"<qgis.core.QgsProcessingParameterVectorTileWriterLayers>`"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:525
msgid ""
"The first parameter to the constructors is the name of the parameter, and"
" the second is the description of the parameter (for the user interface)."
" The rest of the constructor parameters are parameter type specific."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:530
msgid ""
"The input can be turned into QGIS classes using the ``parameterAs`` "
"functions of :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`. For instance to get the number "
"provided for the buffer distance as a double::"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:536
msgid ""
"The ``processAlgorithm`` function should return a dictionary containing "
"values for every output defined by the algorithm. This allows access to "
"these outputs from other algorithms, including other algorithms contained"
" within the same model."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:541
msgid ""
"Well behaved algorithms should define and return as many outputs as makes"
" sense. Non-feature outputs, such as numbers and strings, are very useful"
" when running your algorithm as part of a larger model, as these values "
"can be used as input parameters for subsequent algorithms within the "
"model. Consider adding numeric outputs for things like the number of "
"features processed, the number of invalid features encountered, the "
"number of features output, etc. The more outputs you return, the more "
"useful your algorithm becomes!"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:551
msgid "Feedback"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:553
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object passed to "
":meth:`processAlgorithm "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>` should be used for "
"user feedback / interaction. You can use the :meth:`setProgress "
"<qgis.core.QgsFeedback.setProgress>` function of the :class:`feedback "
"<qgis.core.QgsProcessingFeedback>` object to update the progress bar (0 "
"to 100) to inform the user about the progress of the algorithm. This is "
"very useful if your algorithm takes a long time to complete."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:561
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object provides "
"an :meth:`isCanceled <qgis.core.QgsFeedback.isCanceled>` method that "
"should be monitored to enable cancelation of the algorithm by the user. "
"The :meth:`pushInfo <qgis.core.QgsProcessingFeedback.pushInfo>` method of"
" :class:`feedback <qgis.core.QgsProcessingFeedback>` can be used to send "
"information to the user, and :meth:`reportError "
"<qgis.core.QgsProcessingFeedback.reportError>` is handy for pushing non-"
"fatal errors to users."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:569
msgid ""
"Algorithms should avoid using other forms of providing feedback to users,"
" such as print statements or logging to :class:`QgsMessageLog "
"<qgis.core.QgsMessageLog>`, and should always use the feedback object "
"instead. This allows verbose logging for the algorithm, and is also "
"thread-safe (which is important, given that algorithms are typically run "
"in a background thread)."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:578
msgid "Handling errors"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:580
msgid ""
"If your algorithm encounters an error which prevents it from executing, "
"such as invalid input values or some other condition from which it cannot"
" or should not recover, then you should raise a "
":class:`QgsProcessingException <qgis.core.QgsProcessingException>`. "
"E.g.::"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:589
msgid ""
"Try to avoid raising :class:`QgsProcessingException "
"<qgis.core.QgsProcessingException>` for non-fatal errors (e.g. when a "
"feature has a null geometry), and instead just report these errors via "
"``feedback.reportError()`` and skip the feature. This helps make your "
"algorithm \"model-friendly\", as it avoids halting the execution of an "
"entire algorithm when a non-fatal error is encountered."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:599
msgid "Documenting your scripts"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:601
msgid ""
"As in the case of models, you can create additional documentation for "
"your scripts, to explain what they do and how to use them."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:604
msgid ""
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` "
"provides the :meth:`helpString "
"<qgis.core.QgsProcessingAlgorithm.helpString>`, :meth:`shortHelpString "
"<qgis.core.QgsProcessingAlgorithm.shortHelpString>` and :meth:`helpUrl "
"<qgis.core.QgsProcessingAlgorithm.helpUrl>` functions for that purpose. "
"Specify / override these to provide more help to the user."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:610
msgid ""
":meth:`shortDescription "
"<qgis.core.QgsProcessingAlgorithm.shortDescription>` is used in the "
"tooltip when hovering over the algorithm in the toolbox."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:614
msgid "Pre- and post-execution script hooks"
msgstr ""

#: ../../docs/user_manual/processing/console.rst:616
msgid ""
"Scripts can also be used as pre- and post-execution hooks that are run "
"before and after an algorithm is run, respectively. This can be used to "
"automate tasks that should be performed whenever an algorithm is "
"executed."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:620
msgid ""
"The syntax is identical to the syntax explained above, but an additional "
"global variable named ``alg`` is available, representing the algorithm "
"that has just been (or is about to be) executed."
msgstr ""

#: ../../docs/user_manual/processing/console.rst:624
msgid ""
"In the :guilabel:`General` group of the processing options dialog, you "
"will find two entries named :guilabel:`Pre-execution script` and "
":guilabel:`Post-execution script` where the filenames of the scripts to "
"be run in each case can be entered."
msgstr ""

