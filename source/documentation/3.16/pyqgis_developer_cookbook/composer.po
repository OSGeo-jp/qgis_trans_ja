# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-19 13:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../docs/pyqgis_developer_cookbook/composer.rst:10
msgid "The code snippets on this page need the following imports:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:51
msgid "Map Rendering and Printing"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:56
msgid ""
"There are generally two approaches when input data should be rendered as "
"a map: either do it quick way using `QgsMapRendererJob` or produce more "
"fine-tuned output by composing the map with the :class:`QgsLayout "
"<qgis.core.QgsLayout>` class."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:63
msgid "Simple Rendering"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:65
msgid ""
"The rendering is done creating a :class:`QgsMapSettings "
"<qgis.core.QgsMapSettings>` object to define the rendering settings, and "
"then constructing a :class:`QgsMapRendererJob "
"<qgis.core.QgsMapRendererJob>` with those settings. The latter is then "
"used to create the resulting image."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:69
msgid "Here's an example:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:103
msgid "Rendering layers with different CRS"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:105
msgid ""
"If you have more than one layer and they have a different CRS, the simple"
" example above will probably not work: to get the right values from the "
"extent calculations you have to explicitly set the destination CRS"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:119
msgid "Output using print layout"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:121
msgid ""
"Print layout is a very handy tool if you would like to do a more "
"sophisticated output than the simple rendering shown above. It is "
"possible to create complex map layouts consisting of map views, labels, "
"legend, tables and other elements that are usually present on paper maps."
" The layouts can be then exported to PDF, raster images or directly "
"printed on a printer."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:127
msgid ""
"The layout consists of a bunch of classes. They all belong to the core "
"library. QGIS application has a convenient GUI for placement of the "
"elements, though it is not available in the GUI library. If you are not "
"familiar with `Qt Graphics View framework "
"<https://doc.qt.io/qt-5/graphicsview.html>`_, then you are encouraged to "
"check the documentation now, because the layout is based on it."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:134
msgid ""
"The central class of the layout is the :class:`QgsLayout "
"<qgis.core.QgsLayout>` class, which is derived from the Qt "
"`QGraphicsScene <https://doc.qt.io/qt-5/qgraphicsscene.html>`_ class. Let"
" us create an instance of it:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:144
msgid ""
"Now we can add various elements (map, label, ...) to the layout. All "
"these objects are represented by classes that inherit from the base "
":class:`QgsLayoutItem <qgis.core.QgsLayoutItem>` class."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:147
msgid ""
"Here's a description of some of the main layout items that can be added "
"to a layout."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:149
msgid ""
"map --- this item tells the libraries where to put the map itself. Here "
"we create a map and stretch it over the whole paper size"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:157
msgid ""
"label --- allows displaying labels. It is possible to modify its font, "
"color, alignment and margin"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:167
msgid "legend"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:175
msgid "scale bar"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:185
msgid "arrow"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:186
msgid "picture"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:187
msgid "basic shape"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:188
msgid "nodes based shape"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:212
msgid "table"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:214
msgid "Once an item is added to the layout, it can be moved and resized:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:221
msgid ""
"A frame is drawn around each item by default. You can remove it as "
"follows:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:228
msgid ""
"Besides creating the layout items by hand, QGIS has support for layout "
"templates which are essentially compositions with all their items saved "
"to a .qpt file (with XML syntax)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:232
msgid ""
"Once the composition is ready (the layout items have been created and "
"added to the composition), we can proceed to produce a raster and/or "
"vector output."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:238
msgid "Exporting the layout"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:240
msgid ""
"To export a layout, the :class:`QgsLayoutExporter "
"<qgis.core.QgsLayoutExporter>` class must be used."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:250
msgid ""
"Use the :meth:`exportToImage() "
"<qgis.core.QgsLayoutExporter.exportToImage>` in case you want to export "
"to an image instead of a PDF file."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:254
msgid "Exporting a layout atlas"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:256
msgid ""
"If you want to export all pages from a layout that has the atlas option "
"configured and enabled, you need to use the :meth:`atlas() "
"<qgis.core.QgsPrintLayout.atlas>` method in the exporter "
"(:class:`QgsLayoutExporter <qgis.core.QgsLayoutExporter>`) with small "
"adjustments. In the following example, the pages are exported to PNG "
"images:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/composer.rst:266
msgid ""
"Notice that the outputs will be saved in the base path folder, using the "
"output filename expression configured on atlas."
msgstr ""

